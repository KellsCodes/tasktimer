{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/ifeanyi/Desktop/projects/tasktimer/frontend/src/lib/axios.js"],"sourcesContent":["\"use client\";\n\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst api = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  // withCredentials: true,\n});\n\n// Add Authorization header automatically if token exists\napi.interceptors.request.use(\n  (config) => {\n    const accessToken = Cookies.get(\"accessToken\");\n\n    if (accessToken && config.headers) {\n      config.headers.Authorization = `Bearer ${accessToken}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle expired token responses globally\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        const token = Cookies.get(\"refreshToken\");\n        // Make request to auth server to refresh token\n        const { data } = await api.post(\"/refresh-token\", {\n          refreshToken: token,\n        });\n\n        const { accessToken, refreshToken } = data;\n        // Set the new tokens on browser cookie\n        Cookies.set(\"accessToken\", accessToken, { expires: 7 });\n        Cookies.set(\"refreshToken\", refreshToken, { expires: 7 });\n        // Update the authorization header with the new access token\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n        if (originalRequest.url.includes(\"/logout\")) {\n          originalRequest.data = JSON.stringify({ refreshToken });\n        }\n\n        return api(originalRequest); // Retry the request with th new access token\n      } catch (refreshError) {\n        console.error(\"Token refresh failed:\", refreshError);\n        Cookies.remove(\"accessToken\");\n        Cookies.remove(\"refreshToken\");\n        localStorage.removeItem(\"user\");\n        window.location.href = \"/login\";\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error); // For all other errors, return as is\n  }\n);\n\nexport default api;\n"],"names":[],"mappings":";;;;AAMW;AAJX;AACA;AAHA;;;AAKA,MAAM,MAAM,mJAAK,CAAC,MAAM,CAAC;IACvB,OAAO;IACP,SAAS;QACP,gBAAgB;IAClB;AAEF;AAEA,yDAAyD;AACzD,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAC1B,CAAC;IACC,MAAM,cAAc,mKAAO,CAAC,GAAG,CAAC;IAEhC,IAAI,eAAe,OAAO,OAAO,EAAE;QACjC,OAAO,OAAO,CAAC,aAAa,GAAG,AAAC,UAAqB,OAAZ;IAC3C;IACA,OAAO;AACT,GACA,CAAC;IACC,OAAO,QAAQ,MAAM,CAAC;AACxB;AAGF,0CAA0C;AAC1C,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAC3B,CAAC,WAAa,UACd,OAAO;QAGD;IAFJ,MAAM,kBAAkB,MAAM,MAAM;IAEpC,IAAI,EAAA,kBAAA,MAAM,QAAQ,cAAd,sCAAA,gBAAgB,MAAM,MAAK,OAAO,CAAC,gBAAgB,MAAM,EAAE;QAC7D,gBAAgB,MAAM,GAAG;QACzB,IAAI;YACF,MAAM,QAAQ,mKAAO,CAAC,GAAG,CAAC;YAC1B,+CAA+C;YAC/C,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,IAAI,CAAC,kBAAkB;gBAChD,cAAc;YAChB;YAEA,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG;YACtC,uCAAuC;YACvC,mKAAO,CAAC,GAAG,CAAC,eAAe,aAAa;gBAAE,SAAS;YAAE;YACrD,mKAAO,CAAC,GAAG,CAAC,gBAAgB,cAAc;gBAAE,SAAS;YAAE;YACvD,4DAA4D;YAC5D,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,AAAC,UAAqB,OAAZ;YACzD,IAAI,gBAAgB,GAAG,CAAC,QAAQ,CAAC,YAAY;gBAC3C,gBAAgB,IAAI,GAAG,KAAK,SAAS,CAAC;oBAAE;gBAAa;YACvD;YAEA,OAAO,IAAI,kBAAkB,6CAA6C;QAC5E,EAAE,OAAO,cAAc;YACrB,QAAQ,KAAK,CAAC,yBAAyB;YACvC,mKAAO,CAAC,MAAM,CAAC;YACf,mKAAO,CAAC,MAAM,CAAC;YACf,aAAa,UAAU,CAAC;YACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;YACvB,OAAO,QAAQ,MAAM,CAAC;QACxB;IACF;IACA,OAAO,QAAQ,MAAM,CAAC,QAAQ,qCAAqC;AACrE;uCAGa","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///home/ifeanyi/Desktop/projects/tasktimer/frontend/src/app/authProvider.jsx"],"sourcesContent":["// context/UserContext.js\n\"use client\"\nimport api from \"@/lib/axios\"\nimport Cookies from \"js-cookie\"\nimport { createContext, useContext, useEffect, useState } from \"react\"\n\nconst UserContext = createContext()\n\nexport function UserProvider({ children }) {\n    const [user, setUser] = useState(null)\n\n\n    // Load user from local storage\n    useEffect(() => {\n        const storedUser = localStorage.getItem(\"user\")\n        if (storedUser) {\n            setUser(JSON.parse(storedUser))\n        }\n\n        // incase user deletes user object from localstorage but the access token is still available, get user data\n        if (!localStorage.getItem(\"user\") && Cookies.get(\"accessToken\")) {\n            (async () => {\n                try {\n                    const res = await api.get(\"/get-user\")\n                    if (res?.data?.code === 1) {\n                        setUser(res?.data?.user)\n                    }\n                } catch (error) {\n                    console.error(error)\n                }\n\n            })()\n        }\n    }, [])\n\n    // keep localStorage in sync whenever user changes\n    useEffect(() => {\n        if (user) {\n            localStorage.setItem(\"user\", JSON.stringify(user))\n        } else {\n            localStorage.removeItem(\"user\")\n        }\n    }, [user])\n\n    // Logout user function\n    const logout = async () => {\n        const refreshToken = Cookies.get(\"refreshToken\")\n        if (!refreshToken) {\n            Cookies.remove(\"refreshToken\")\n            Cookies.remove(\"accessToken\")\n            localStorage.removeItem(\"user\")\n            window.location.href = \"/\"\n        } else {\n            try {\n                const { data } = await api.put(\"/logout\", { refreshToken })\n                if (data.code === 1) {\n                    Cookies.remove(\"refreshToken\")\n                    Cookies.remove(\"accessToken\")\n                    localStorage.removeItem(\"user\")\n                    window.location.href = \"/\"\n                }\n            } catch (error) {\n                console.error(error)\n            }\n        }\n    }\n\n    return (\n        <UserContext.Provider value={{ user, setUser, logout }}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport function useUser() {\n    return useContext(UserContext)\n}\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;AAEzB;AACA;AACA;;;AAHA;;;;AAKA,MAAM,4BAAc,IAAA,8KAAa;AAE1B,SAAS,aAAa,KAAY;QAAZ,EAAE,QAAQ,EAAE,GAAZ;;IACzB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAC;IAGjC,+BAA+B;IAC/B,IAAA,0KAAS;kCAAC;YACN,MAAM,aAAa,aAAa,OAAO,CAAC;YACxC,IAAI,YAAY;gBACZ,QAAQ,KAAK,KAAK,CAAC;YACvB;YAEA,2GAA2G;YAC3G,IAAI,CAAC,aAAa,OAAO,CAAC,WAAW,mKAAO,CAAC,GAAG,CAAC,gBAAgB;gBAC7D;8CAAC;wBACG,IAAI;gCAEI;4BADJ,MAAM,MAAM,MAAM,iIAAG,CAAC,GAAG,CAAC;4BAC1B,IAAI,CAAA,gBAAA,0BAHZ,CAGY,YAAA,IAAK,IAAI,AAOpB,cAPW,gCAAA,UAAW,IAAI,MAAK,GAAG;oCACf;gCAAR,QAAQ,gBAAA,2BAAA,aAAA,IAAK,IAAI,cAAT,iCAAA,WAAW,IAAI;4BAC3B;wBACJ,EAAE,OAAO,OAAO;4BACZ,QAAQ,KAAK,CAAC;wBAClB;oBAEJ;;YACJ;QACJ;iCAAG,EAAE;IAEL,kDAAkD;IAClD,IAAA,0KAAS;kCAAC;YACN,IAAI,MAAM;gBACN,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAChD,OAAO;gBACH,aAAa,UAAU,CAAC;YAC5B;QACJ;iCAAG;QAAC;KAAK;IAET,uBAAuB;IACvB,MAAM,SAAS;QACX,MAAM,eAAe,mKAAO,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,cAAc;YACf,mKAAO,CAAC,MAAM,CAAC;YACf,mKAAO,CAAC,MAAM,CAAC;YACf,aAAa,UAAU,CAAC;YACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;QAC3B,OAAO;YACH,IAAI;gBACA,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,iIAAG,CAAC,GAAG,CAAC,WAAW;oBAAE;gBAAa;gBACzD,IAAI,KAAK,IAAI,KAAK,GAAG;oBACjB,mKAAO,CAAC,MAAM,CAAC;oBACf,mKAAO,CAAC,MAAM,CAAC;oBACf,aAAa,UAAU,CAAC;oBACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;gBAC3B;YACJ,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC;YAClB;QACJ;IACJ;IAEA,qBACI,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAS;QAAO;kBAChD;;;;;;AAGb;GAhEgB;KAAA;AAkET,SAAS;;IACZ,OAAO,IAAA,2KAAU,EAAC;AACtB;IAFgB","debugId":null}}]
}