// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  username    String?   @db.VarChar(12)
  password    String?   // for local auth, null if using OAuth
  provider    String    @default("local") // "local" or "google"
  verifiedAt  DateTime? // null until verified
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  profile     Profile?
  token       RefreshToken[]
  emailVerification  EmailVerificationToken[]
}

model Profile {
  id            Int @id @default(autoincrement())
  firstname     String? @db.VarChar(15)
  lastname      String? @db.VarChar(15)
  profession    String? @db.VarChar(15)
  profileImage  String? @db.VarChar(255)
  userId        Int     @unique
  user          User    @relation(fields: [userId], references: [id], onDelete: Cascade)   
}

model RefreshToken {
  id              Int       @id @default(autoincrement())
  refreshToken    String    @unique @db.VarChar(256)
  expiresAt       DateTime
  revoked         Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userId          Int
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model EmailVerificationToken {
  id                       Int        @id @default(autoincrement())
  emailVerificationToken   String     @unique  @db.VarChar(256)
  userId                   Int
  user                     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  isUsed                   Boolean   @default(false)
  expiresAt                DateTime
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
}